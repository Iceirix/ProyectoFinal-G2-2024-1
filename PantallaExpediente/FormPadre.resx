<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>